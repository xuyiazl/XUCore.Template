<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XUCore.Template.Mediator.Applaction</name>
    </assembly>
    <members>
        <member name="T:XUCore.Template.Mediator.Applaction.ChinaAreaAppService">
            <summary>
            城市区域管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.ChinaAreaAppService.CreateAsync(XUCore.Template.Mediator.Domain.ChinaAreaCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建城市区域
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.ChinaAreaAppService.UpdateAsync(XUCore.Template.Mediator.Domain.ChinaAreaUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新城市区域信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.ChinaAreaAppService.DeleteAsync(XUCore.Template.Mediator.Domain.ChinaAreaDeleteCommand,System.Threading.CancellationToken)">
            <summary>
            删除城市区域（物理删除）
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.ChinaAreaAppService.GetAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取城市区域信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.ChinaAreaAppService.GetTreeAsync(XUCore.Template.Mediator.Domain.ChinaAreaQueryTreeCommand,System.Threading.CancellationToken)">
            <summary>
            获取城市区域树形结构
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.ChinaAreaAppService.GetListAsync(XUCore.Template.Mediator.Domain.ChinaAreaQueryListCommand,System.Threading.CancellationToken)">
            <summary>
            获取城市区域列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.LoginAppService">
            <summary>
            用户登录接口
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.LoginAppService.PostAsync(XUCore.Template.Mediator.Domain.UserLoginCommand,System.Threading.CancellationToken)">
            <summary>
            用户登录
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.LoginAppService.PostOutAsync(System.Threading.CancellationToken)">
            <summary>
            退出登录
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.LoginAppService.GetPermissionExistsAsync(XUCore.Template.Mediator.Domain.PermissionExistCommand,System.Threading.CancellationToken)">
            <summary>
            查询是否有权限
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.LoginAppService.GetPermissionMenusAsync(XUCore.Template.Mediator.Domain.PermissionQueryMenuTreeCommand,System.Threading.CancellationToken)">
            <summary>
            查询权限导航
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.LoginAppService.GetPermissionMenuExpressAsync(XUCore.Template.Mediator.Domain.PermissionQueryMenuExpressCommand,System.Threading.CancellationToken)">
            <summary>
            查询权限导航（快捷导航）
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.MenuAppService">
            <summary>
            用户导航管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.CreateAsync(XUCore.Template.Mediator.Domain.MenuCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建导航
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.UpdateAsync(XUCore.Template.Mediator.Domain.MenuUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新导航信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.UpdateFieldAsync(XUCore.Template.Mediator.Domain.MenuUpdateFieldCommand,System.Threading.CancellationToken)">
            <summary>
            更新导航指定字段内容
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.UpdateEnabledAsync(XUCore.Template.Mediator.Domain.MenuUpdateStatusCommand,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.DeleteAsync(XUCore.Template.Mediator.Domain.MenuDeleteCommand,System.Threading.CancellationToken)">
            <summary>
            删除导航（物理删除）
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.GetAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取导航信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.GetTreeAsync(System.Threading.CancellationToken)">
            <summary>
            获取导航树形结构
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.GetListAsync(XUCore.Template.Mediator.Domain.MenuQueryListCommand,System.Threading.CancellationToken)">
            <summary>
            获取导航列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MenuAppService.GetPageAsync(XUCore.Template.Mediator.Domain.MenuQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.RoleAppService">
            <summary>
            用户角色管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.CreateAsync(XUCore.Template.Mediator.Domain.RoleCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.UpdateAsync(XUCore.Template.Mediator.Domain.RoleUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新角色信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.UpdateFieldAsync(XUCore.Template.Mediator.Domain.RoleUpdateFieldCommand,System.Threading.CancellationToken)">
            <summary>
            更新角色指定字段内容
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.UpdateEnabledAsync(XUCore.Template.Mediator.Domain.RoleUpdateStatusCommand,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.DeleteAsync(XUCore.Template.Mediator.Domain.RoleDeleteCommand,System.Threading.CancellationToken)">
            <summary>
            删除角色（物理删除）
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.GetAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取角色信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.GetListAsync(XUCore.Template.Mediator.Domain.RoleQueryListCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.GetPageAsync(XUCore.Template.Mediator.Domain.RoleQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取角色分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.RoleAppService.GetRelevanceMenuAsync(XUCore.Template.Mediator.Domain.RoleQueryRelevanceMenuCommand,System.Threading.CancellationToken)">
            <summary>
            获取角色关联的所有导航id集合
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.UploadAppService">
            <summary>
            文件上传
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UploadAppService.File(Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            上传文件
            </summary>
            <param name="formFile"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UploadAppService.Image(Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            上传图片
            </summary>
            <param name="formFile"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UploadAppService.Base64(XUCore.Template.Mediator.Domain.UploadBase64Command,System.Threading.CancellationToken)">
            <summary>
            上传图片
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.UserAppService">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.CreateInitAccountAsync(System.Threading.CancellationToken)">
            <summary>
            创建初始账号
            </summary>
            <remarks>
            初始账号密码：
                <para>username : admin</para>
                <para>password : admin</para>
            </remarks>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.CreateAsync(XUCore.Template.Mediator.Domain.UserCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建用户账号
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.UpdateAsync(XUCore.Template.Mediator.Domain.UserUpdateInfoCommand,System.Threading.CancellationToken)">
            <summary>
            更新账号信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.UpdatePasswordAsync(XUCore.Template.Mediator.Domain.UserUpdatePasswordCommand,System.Threading.CancellationToken)">
            <summary>
            更新密码
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.UpdateFieldAsync(XUCore.Template.Mediator.Domain.UserUpdateFieldCommand,System.Threading.CancellationToken)">
            <summary>
            更新指定字段内容
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.UpdateEnabledAsync(XUCore.Template.Mediator.Domain.UserUpdateStatusCommand,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.DeleteAsync(XUCore.Template.Mediator.Domain.UserDeleteCommand,System.Threading.CancellationToken)">
            <summary>
            删除账号（物理删除）
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.GetAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.GetAccountAsync(XUCore.Template.Mediator.Domain.UserQueryByAccountCommand,System.Threading.CancellationToken)">
            <summary>
            获取账号信息（根据账号或手机号码）
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.GetAnyAsync(XUCore.Template.Mediator.Domain.UserAnyByAccountCommand,System.Threading.CancellationToken)">
            <summary>
            检查账号或者手机号是否存在
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.GetPageAsync(XUCore.Template.Mediator.Domain.UserQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取账号分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.CreateRelevanceRoleAsync(XUCore.Template.Mediator.Domain.UserRelevanceRoleCommand,System.Threading.CancellationToken)">
            <summary>
            账号关联角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.GetRelevanceRoleKeysAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号关联的角色id集合
            </summary>
            <param name="userId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.GetRecordListAsync(XUCore.Template.Mediator.Domain.UserQueryLoginRecordCommand,System.Threading.CancellationToken)">
            <summary>
            获取最近登录记录
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.UserAppService.GetRecordPageAsync(XUCore.Template.Mediator.Domain.UserQueryLoginRecordPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有登录记录分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.ApiGroup">
            <summary>
            swagger api group
            </summary>
        </member>
        <member name="F:XUCore.Template.Mediator.Applaction.ApiGroup.Admin">
            <summary>
            admin
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.ApiExceptionFilter">
            <summary>
            API错误日志过滤器
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.ApiExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            异常处理
            </summary>
            <param name="context">异常上下文</param>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.JwtHandler">
            <summary>
            JWT 授权自定义处理程序
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.JwtHandler.#ctor(System.IServiceProvider)">
            <summary>
            JWT 授权自定义处理程序
            </summary>ws
            <param name="serviceProvider"></param>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.JwtHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)">
            <summary>
            重写 Handler 添加自动刷新收取逻辑
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.JwtHandler.PipelineAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Http.DefaultHttpContext)">
            <summary>
            验证管道
            </summary>
            <param name="context"></param>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.MediatorMemoryHandler">
            <summary>
            Mediator 消息中介发布请求和通知
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MediatorMemoryHandler.PublishEvent``1(``0,System.Threading.CancellationToken)">
            <summary>
            发布事件通知
            </summary>
            <typeparam name="TNotification"></typeparam>
            <param name="event">通知事件</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator.Applaction.MediatorMemoryHandler.SendCommand``1(XUCore.Ddd.Domain.Command{``0},System.Threading.CancellationToken)">
            <summary>
            发送命令请求
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="command">命令</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator.Applaction.DependencyInjection">
            <summary>
            注册服务
            </summary>
        </member>
    </members>
</doc>
