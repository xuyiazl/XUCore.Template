<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XUCore.Template.Mediator2.Applaction</name>
    </assembly>
    <members>
        <member name="T:XUCore.Template.Mediator2.Applaction.ApiGroup">
            <summary>
            swagger api group
            </summary>
        </member>
        <member name="F:XUCore.Template.Mediator2.Applaction.ApiGroup.Admin">
            <summary>
            admin
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.DtoBase`1.Id">
            <summary>
            主键Id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.DtoKeyBase`1.Id">
            <summary>
            主键Id
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ApiExceptionFilter">
            <summary>
            API错误日志过滤器
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.ApiExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            异常处理
            </summary>
            <param name="context">异常上下文</param>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.JwtHandler">
            <summary>
            JWT 授权自定义处理程序
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.JwtHandler.#ctor(System.IServiceProvider)">
            <summary>
            JWT 授权自定义处理程序
            </summary>ws
            <param name="serviceProvider"></param>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.JwtHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)">
            <summary>
            重写 Handler 添加自动刷新收取逻辑
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.JwtHandler.PipelineAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Http.DefaultHttpContext)">
            <summary>
            验证管道
            </summary>
            <param name="context"></param>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand">
            <summary>
            省市区域管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.ParentId">
            <summary>
            上级区域Id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.Level">
            <summary>
            行政区域等级 1-省 2-市 3-区县 4-街道镇
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.WholeName">
            <summary>
            完整名称
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.Lon">
            <summary>
            本区域经度
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.Lat">
            <summary>
            本区域维度
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.CityCode">
            <summary>
            电话区号
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.ZipCode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.AreaCode">
            <summary>
            行政区划代码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.PinYin">
            <summary>
            名称全拼
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.SimplePy">
            <summary>
            首字母简拼
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.PerPinYin">
            <summary>
            区域名称拼音的第一个字母
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.Sort">
            <summary>
            权重排序
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand.CreateAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.ChinaAreaCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建城市区域
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaDeleteCommand">
            <summary>
            省市区域管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDeleteCommand.Ids">
            <summary>
            id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.ChinaAreaDeleteCommand.DeleteAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.ChinaAreaDeleteCommand,System.Threading.CancellationToken)">
            <summary>
            删除城市区域（物理删除）
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand">
            <summary>
            省市区域管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.ParentId">
            <summary>
            上级区域Id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.Level">
            <summary>
            行政区域等级 1-省 2-市 3-区县 4-街道镇
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.WholeName">
            <summary>
            完整名称
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.Lon">
            <summary>
            本区域经度
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.Lat">
            <summary>
            本区域维度
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.CityCode">
            <summary>
            电话区号
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.ZipCode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.AreaCode">
            <summary>
            行政区划代码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.PinYin">
            <summary>
            名称全拼
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.SimplePy">
            <summary>
            首字母简拼
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.PerPinYin">
            <summary>
            区域名称拼音的第一个字母
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.Sort">
            <summary>
            权重排序
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand.UpdateAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.ChinaAreaUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新城市区域信息
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaDto">
            <summary>
            导航列表
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.ParentId">
            <summary>
            上级区域Id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.Level">
            <summary>
            行政区域等级 1-省 2-市 3-区县 4-街道镇
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.WholeName">
            <summary>
            完整名称
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.Lon">
            <summary>
            本区域经度
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.Lat">
            <summary>
            本区域维度
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.CityCode">
            <summary>
            电话区号
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.ZipCode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.AreaCode">
            <summary>
            行政区划代码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.PinYin">
            <summary>
            名称全拼
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.SimplePy">
            <summary>
            首字母简拼
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.PerPinYin">
            <summary>
            区域名称拼音的第一个字母
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaDto.Sort">
            <summary>
            权重排序
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaTreeDto">
            <summary>
            导航列表
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaTreeDto.Childs">
            <summary>
            下级城市
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryByIdCommand">
            <summary>
            省市区域管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryByIdCommand.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryByIdCommand.GetAsync(MediatR.IMediator,System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取城市区域信息
            </summary>
            <param name="mediator"></param>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryListCommand">
            <summary>
            省市区域管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryListCommand.Limit">
            <summary>
            记录数
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryListCommand.CityId">
            <summary>
            城市Id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryListCommand.GetListAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.ChinaAreaQueryListCommand,System.Threading.CancellationToken)">
            <summary>
            获取城市区域列表
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryPagedCommand">
            <summary>
            省市区域管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryPagedCommand.CurrentPage">
            <summary>
            当前页码
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryPagedCommand.PageSize">
            <summary>
            分页大小
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryPagedCommand.Keyword">
            <summary>
            搜索关键字
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryPagedCommand.GetPageAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.ChinaAreaQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取城市区域分页
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryTreeCommand">
            <summary>
            省市区域管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryTreeCommand.CityId">
            <summary>
            城市Id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryTreeCommand.Level">
            <summary>
            行政区域等级 0-全部 1-到市级 2-到县级 3-到街道
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.ChinaAreaQueryTreeCommand.GetTreeAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.ChinaAreaQueryTreeCommand,System.Threading.CancellationToken)">
            <summary>
            获取城市区域树形结构
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.DependencyInjection">
            <summary>
            注册服务
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UploadBase64Command">
            <summary>
            上传服务
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UploadBase64Command.Base64Async(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UploadBase64Command,System.Threading.CancellationToken)">
            <summary>
            上传图片
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UploadFileCommand">
            <summary>
            上传服务
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UploadFileCommand.FileAsync(MediatR.IMediator,Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            上传文件
            </summary>
            <param name="mediator"></param>
            <param name="formFile"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UploadImageCommand">
            <summary>
            上传服务
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UploadImageCommand.ImageAsync(MediatR.IMediator,Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            上传图片
            </summary>
            <param name="mediator"></param>
            <param name="formFile"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserLoginCommand">
            <summary>
            登录操作
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginCommand.Account">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginCommand.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserLoginCommand.PostAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserLoginCommand,System.Threading.CancellationToken)">
            <summary>
            用户登录
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserLoginOutCommand">
            <summary>
            登录操作
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserLoginOutCommand.PostOutAsync(MediatR.IMediator,System.Threading.CancellationToken)">
            <summary>
            退出登录
            </summary>
            <param name="mediator"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.LoginTokenDto">
            <summary>
            登录返回Token
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.LoginTokenDto.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.PermissionMenuDto">
            <summary>
            权限导航
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionMenuDto.ParentId">
            <summary>
            导航父级id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionMenuDto.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionMenuDto.Icon">
            <summary>
            图标样式
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionMenuDto.Url">
            <summary>
            连接地址
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionMenuDto.OnlyCode">
            <summary>
            唯一代码
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.PermissionMenuTreeDto">
            <summary>
            权限导航
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionMenuTreeDto.Child">
            <summary>
            子集导航
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.PermissionExistCommand">
            <summary>
            权限操作
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionExistCommand.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionExistCommand.OnlyCode">
            <summary>
            唯一代码
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.PermissionExistCommand.GetPermissionExistsAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.PermissionExistCommand,System.Threading.CancellationToken)">
            <summary>
            查询是否有权限
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.PermissionQueryCacheCommand">
            <summary>
            权限操作
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionQueryCacheCommand.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.PermissionQueryMenuExpressCommand">
            <summary>
            权限操作
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionQueryMenuExpressCommand.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.PermissionQueryMenuExpressCommand.GetPermissionMenuExpressAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.PermissionQueryMenuExpressCommand,System.Threading.CancellationToken)">
            <summary>
            查询权限导航（快捷导航）
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.PermissionQueryMenuTreeCommand">
            <summary>
            权限操作
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.PermissionQueryMenuTreeCommand.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.PermissionQueryMenuTreeCommand.GetPermissionMenusAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.PermissionQueryMenuTreeCommand,System.Threading.CancellationToken)">
            <summary>
            查询权限导航
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuCreateCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.ParentId">
            <summary>
            导航父级id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.Icon">
            <summary>
            图标样式
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.Url">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.OnlyCode">
            <summary>
            唯一代码（权限使用）
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.IsMenu">
            <summary>
            是否是导航
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.Sort">
            <summary>
            排序权重
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.IsExpress">
            <summary>
            是否是快捷导航
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuCreateCommand.CreateAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.MenuCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建导航
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuDeleteCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDeleteCommand.Ids">
            <summary>
            id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuDeleteCommand.DeleteAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.MenuDeleteCommand,System.Threading.CancellationToken)">
            <summary>
            删除导航（物理删除）
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.ParentId">
            <summary>
            导航父级id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.Icon">
            <summary>
            图标样式
            </summary>s
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.Url">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.OnlyCode">
            <summary>
            唯一代码（权限使用）
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.IsMenu">
            <summary>
            是否是导航
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.Sort">
            <summary>
            排序权重
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.IsExpress">
            <summary>
            是否是快捷导航
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuUpdateCommand.UpdateAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.MenuUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新导航信息
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuUpdateFieldCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateFieldCommand.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateFieldCommand.Field">
            <summary>
            指定的字段名
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateFieldCommand.Value">
            <summary>
            修改的值
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuUpdateFieldCommand.UpdateFieldAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.MenuUpdateFieldCommand,System.Threading.CancellationToken)">
            <summary>
            更新导航指定字段内容
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuUpdateStatusCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateStatusCommand.Ids">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuUpdateStatusCommand.Enabled">
            <summary>
            修改的值
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuUpdateStatusCommand.UpdateEnabledAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.MenuUpdateStatusCommand,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuDto">
            <summary>
            导航列表
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDto.ParentId">
            <summary>
            导航父级id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDto.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDto.Icon">
            <summary>
            图标样式
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDto.Url">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDto.OnlyCode">
            <summary>
            唯一代码（权限使用）
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDto.IsMenu">
            <summary>
            是否是导航
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDto.Sort">
            <summary>
            排序权重
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuDto.IsExpress">
            <summary>
            是否是快捷导航
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuTreeDto">
            <summary>
            导航列表
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuQueryByIdCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuQueryByIdCommand.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuQueryByIdCommand.GetAsync(MediatR.IMediator,System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取导航信息
            </summary>
            <param name="mediator"></param>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuQueryListCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuQueryListCommand.Limit">
            <summary>
            记录数
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuQueryListCommand.IsMenu">
            <summary>
            是否是导航
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuQueryListCommand.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuQueryListCommand.GetListAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.MenuQueryListCommand,System.Threading.CancellationToken)">
            <summary>
            获取导航列表
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuQueryPagedCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuQueryPagedCommand.CurrentPage">
            <summary>
            当前页码
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuQueryPagedCommand.PageSize">
            <summary>
            分页大小
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuQueryPagedCommand.Keyword">
            <summary>
            搜索关键字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.MenuQueryPagedCommand.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuQueryPagedCommand.GetPageAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.MenuQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取分页
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.MenuQueryTreeCommand">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.MenuQueryTreeCommand.GetTreeAsync(MediatR.IMediator,System.Threading.CancellationToken)">
            <summary>
            获取导航树形结构
            </summary>
            <param name="mediator"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleCreateCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleCreateCommand.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleCreateCommand.MenuIds">
            <summary>
            导航关联id集合
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleCreateCommand.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleCreateCommand.CreateAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.RoleCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建角色
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleDeleteCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleDeleteCommand.Ids">
            <summary>
            id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleDeleteCommand.DeleteAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.RoleDeleteCommand,System.Threading.CancellationToken)">
            <summary>
            删除角色（物理删除）
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleUpdateCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateCommand.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateCommand.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateCommand.MenuIds">
            <summary>
            导航id集合
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateCommand.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleUpdateCommand.UpdateAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.RoleUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新角色信息
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleUpdateFieldCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateFieldCommand.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateFieldCommand.Field">
            <summary>
            指定的字段名
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateFieldCommand.Value">
            <summary>
            修改的值
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleUpdateFieldCommand.UpdateFieldAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.RoleUpdateFieldCommand,System.Threading.CancellationToken)">
            <summary>
            更新角色指定字段内容
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleUpdateStatusCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateStatusCommand.Ids">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleUpdateStatusCommand.Enabled">
            <summary>
            修改的值
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleUpdateStatusCommand.UpdateEnabledAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.RoleUpdateStatusCommand,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleDto">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleDto.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleQueryByIdCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryByIdCommand.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleQueryByIdCommand.GetAsync(MediatR.IMediator,System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取角色信息
            </summary>
            <param name="mediator"></param>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleQueryListCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryListCommand.Limit">
            <summary>
            记录数
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryListCommand.Keyword">
            <summary>
            搜索关键字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryListCommand.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleQueryListCommand.GetListAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.RoleQueryListCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有角色
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleQueryPagedCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryPagedCommand.CurrentPage">
            <summary>
            当前页码
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryPagedCommand.PageSize">
            <summary>
            分页大小
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryPagedCommand.Keyword">
            <summary>
            搜索关键字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryPagedCommand.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleQueryPagedCommand.GetPageAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.RoleQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取角色分页
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.RoleQueryRelevanceMenuCommand">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.RoleQueryRelevanceMenuCommand.RoleId">
            <summary>
            角色id
            </summary>
            <value></value>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.RoleQueryRelevanceMenuCommand.GetRelevanceMenuAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.RoleQueryRelevanceMenuCommand,System.Threading.CancellationToken)">
            <summary>
            获取角色关联的所有导航id集合
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserCreateCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateCommand.UserName">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateCommand.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateCommand.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateCommand.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateCommand.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateCommand.Position">
            <summary>
            职位
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateCommand.Company">
            <summary>
            公司
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateCommand.Roles">
            <summary>
            角色id集合
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserCreateCommand.CreateAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建用户账号
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserDeleteCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserDeleteCommand.Ids">
            <summary>
            id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserDeleteCommand.DeleteAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserDeleteCommand,System.Threading.CancellationToken)">
            <summary>
            删除账号（物理删除）
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserRelevanceRoleCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserRelevanceRoleCommand.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserRelevanceRoleCommand.RoleIds">
            <summary>
            角色id集合
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserRelevanceRoleCommand.CreateRelevanceRoleAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserRelevanceRoleCommand,System.Threading.CancellationToken)">
            <summary>
            账号关联角色
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserUpdateFieldCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateFieldCommand.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateFieldCommand.Field">
            <summary>
            指定的字段名
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateFieldCommand.Value">
            <summary>
            修改的值
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserUpdateFieldCommand.UpdateFieldAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserUpdateFieldCommand,System.Threading.CancellationToken)">
            <summary>
            更新指定字段内容
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserUpdateInfoCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateInfoCommand.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateInfoCommand.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateInfoCommand.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateInfoCommand.Position">
            <summary>
            职位
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateInfoCommand.Company">
            <summary>
            公司
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserUpdateInfoCommand.UpdateAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserUpdateInfoCommand,System.Threading.CancellationToken)">
            <summary>
            更新账号信息
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserUpdatePasswordCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdatePasswordCommand.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdatePasswordCommand.OldPassword">
            <summary>
            旧密码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdatePasswordCommand.NewPassword">
            <summary>
            新密码
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserUpdatePasswordCommand.UpdatePasswordAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserUpdatePasswordCommand,System.Threading.CancellationToken)">
            <summary>
            更新密码
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserUpdateStatusCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateStatusCommand.Ids">
            <summary>
            id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserUpdateStatusCommand.Enabled">
            <summary>
            修改的值
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserUpdateStatusCommand.UpdateEnabledAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserUpdateStatusCommand,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserDto">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserDto.UserName">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserDto.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserDto.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserDto.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserDto.Position">
            <summary>
            职位
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserDto.Company">
            <summary>
            公司
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserDto.Picture">
            <summary>
            头像
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto">
            <summary>
            登录记录
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto.LoginWay">
            <summary>
            登录方式
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto.LoginIp">
            <summary>
            登录ip
            </summary>s
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto.Name">
            <summary>
            用户名字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto.Mobile">
            <summary>
            用户手机
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto.UserName">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserLoginRecordDto.Picture">
            <summary>
            用户头像
            </summary>
        </member>
        <member name="F:XUCore.Template.Mediator2.Applaction.AccountMode.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:XUCore.Template.Mediator2.Applaction.AccountMode.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserCreateEvent">
            <summary>
            用户账号创建事件
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateEvent.Id">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserCreateEvent.User">
            <summary>
            用户实体
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserCreateEvent.#ctor(System.Int64,XUCore.Template.Mediator2.Persistence.Entities.UserEntity)">
            <summary>
            用户账号创建事件
            </summary>
            <param name="id"></param>
            <param name="user"></param>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserCreateEventHandler">
            <summary>
            事件通知操作
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserCreateEventHandler.#ctor">
            <summary>
            事件通知操作
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserCreateEventHandler.Handle(XUCore.Template.Mediator2.Applaction.UserCreateEvent,System.Threading.CancellationToken)">
            <summary>
            接受消息处理创建后的业务
            </summary>
            <param name="notification"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserAnyByAccountCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserAnyByAccountCommand.AccountMode">
            <summary>
            账号类型
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserAnyByAccountCommand.Account">
            <summary>
            账号
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserAnyByAccountCommand.NotId">
            <summary>
            需要排除的id
            </summary>
            <value></value>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserAnyByAccountCommand.GetAnyAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserAnyByAccountCommand,System.Threading.CancellationToken)">
            <summary>
            检查账号或者手机号是否存在
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserQueryByAccountCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryByAccountCommand.AccountMode">
            <summary>
            账号类型
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryByAccountCommand.Account">
            <summary>
            账号
            </summary>
            <value></value>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserQueryByAccountCommand.GetAccountAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserQueryByAccountCommand,System.Threading.CancellationToken)">
            <summary>
            获取账号信息（根据账号或手机号码）
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserQueryByIdCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryByIdCommand.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserQueryByIdCommand.GetAsync(MediatR.IMediator,System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号信息
            </summary>
            <param name="mediator"></param>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordCommand.Limit">
            <summary>
            记录数
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordCommand.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordCommand.GetRecordListAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordCommand,System.Threading.CancellationToken)">
            <summary>
            获取最近登录记录
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordPagedCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordPagedCommand.CurrentPage">
            <summary>
            当前页码
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordPagedCommand.PageSize">
            <summary>
            分页大小
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordPagedCommand.Keyword">
            <summary>
            搜索关键字
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordPagedCommand.GetRecordPageAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserQueryLoginRecordPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有登录记录分页
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserQueryPagedCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryPagedCommand.CurrentPage">
            <summary>
            当前页码
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryPagedCommand.PageSize">
            <summary>
            分页大小
            </summary>
            <value></value>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryPagedCommand.Keyword">
            <summary>
            搜索关键字
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryPagedCommand.Enabled">
            <summary>
            启用s
            </summary>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserQueryPagedCommand.GetPageAsync(MediatR.IMediator,XUCore.Template.Mediator2.Applaction.UserQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取账号分页
            </summary>
            <param name="mediator"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Mediator2.Applaction.UserQueryRelevanceRoleCommand">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:XUCore.Template.Mediator2.Applaction.UserQueryRelevanceRoleCommand.UserId">
            <summary>
            用户id
            </summary>
            <value></value>
        </member>
        <member name="M:XUCore.Template.Mediator2.Applaction.UserQueryRelevanceRoleCommand.GetRelevanceRoleKeysAsync(MediatR.IMediator,System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号关联的角色id集合
            </summary>
            <param name="mediator"></param>
            <param name="userId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
    </members>
</doc>
