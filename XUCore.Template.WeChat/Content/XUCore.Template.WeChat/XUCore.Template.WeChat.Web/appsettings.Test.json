{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "ConnectionSettings": {
    //监听所有操作
    "MonitorCommand": false,
    //监听Curd操作
    "Curd": true,
    //建库
    "CreateDb": false,
    //SqlServer,PostgreSQL,Oracle,OdbcOracle,OdbcSqlServer,OdbcMySql,OdbcPostgreSQL,Odbc,OdbcDameng,MsAccess
    //建库连接字符串
    //MySql "Server=localhost; Port=3306; Database=mysql; Uid=root; Pwd=pwd; Charset=utf8mb4;"
    //SqlServer "Data Source=.;Integrated Security=True;Initial Catalog=master;Pooling=true;Min Pool Size=1"
    //PostgreSQL "Host=localhost;Port=5432;Username=postgres;Password=; Database=postgres;Pooling=true;Minimum Pool Size=1",
    "CreateDbConnectionString": "Data Source=localhost;port=3306;user id=root;password=;default command timeout=120;charset=utf8mb4;",
    //建库脚本
    //MySql "CREATE DATABASE `admindb` CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_general_ci'"
    //SqlServer "CREATE DATABASE [admindb]"
    //PostgreSQL "CREATE DATABASE \"admindb\" WITH ENCODING = 'UTF8'"
    "CreateDbSql": "CREATE DATABASE `nigeldb` CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_general_ci'",
    //同步结构
    "SyncStructure": true,
    //同步数据
    "SyncData": true,
    //项目初始化不开启生成数据，发布生产环境前，如果开发环境有配置数据需要更新数据包，可以开启生成数据包，使用完记得关闭
    //开启生成数据前先关闭syncStructure syncData createDb
    //生成数据
    "GenerateData": false,
    //数据库配置 https://github.com/dotnetcore/FreeSql/wiki/入门
    //数据库类型 MySql = 0, SqlServer = 1, PostgreSQL = 2, Oracle = 3, Sqlite = 4, OdbcOracle = 5, OdbcSqlServer = 6, OdbcMySql = 7, OdbcPostgreSQL = 8, Odbc = 9, OdbcDameng = 10, MsAccess = 11, Dameng = 12, OdbcKingbaseES = 13, ShenTong = 14, KingbaseES = 15, Firebird = 16
    "Type": "MySql",
    //连接字符串
    //MySql "Server=localhost; Port=3306; Database=admindb; Uid=root; Pwd=pwd; Charset=utf8mb4;"
    //SqlServer "Data Source=.;Integrated Security=True;Initial Catalog=admindb;Pooling=true;Min Pool Size=1"
    //PostgreSQL "Host=localhost;Port=5432;Username=postgres;Password=; Database=admindb;Pooling=true;Minimum Pool Size=1"
    //Sqlite "Data Source=|DataDirectory|\\admindb.db; Pooling=true;Min Pool Size=1"
    "ConnectionString": "Data Source=localhost;port=3306;Initial Catalog=nigeldb;user id=root;password=;default command timeout=120;charset=utf8mb4;",
    //空闲时间(分)
    "IdleTime": 10,
    //多数据库
    //1、Common.Dbs中定义MySqlDb类
    //2、IFreeSql<MySqlDb> _mySqlDb;
    "Dbs": [
      //{
      //  "name": "MySqlDb",
      //  "type": "MySql",
      //  "connectionString": "Server=localhost; Port=3306; Database=admindb; Uid=root; Pwd=pwd; Charset=utf8mb4;"
      //}
    ]
  },
  "AppSettings": {
    "RootUrl": "",
    "Domain": "",
    "WebSite": {
      "Title": "XUCore 后台管理系统",
      "SimpleTitle": "XUCore",
      "Logo": "/images/coffee.png",
      "AQ": "xxxxxx"
    }
  },
  "Wx": {
    "PublicAccount": {
      "AppId": "",
      "AppSecret": "",
      "Token": "",
      "WeiXinAccount": ""
    }
  },
  // 微信支付
  // 更多配置，请查看WeChatPayOptions类
  // 微信支付
  // 更多配置，请查看WeChatPayOptions类
  "WeChatPay": {
    // 应用号
    // 如：微信公众平台AppId、微信开放平台AppId、微信小程序AppId、企业微信CorpId等
    "AppId": "",

    // 商户号
    // 为微信支付商户平台的商户号
    "MchId": "",

    // 商户API密钥
    // 为微信支付商户平台的API密钥，请注意不是APIv3密钥
    "APIKey": "",

    // 商户APIv3密钥
    // 为微信支付商户平台的APIv3密钥，请注意不是API密钥，v3接口必填
    "APIv3Key": "",

    // 商户API证书
    // 使用V2退款、付款等接口时必填
    // 使用V3接口时必填
    // 可为证书文件路径 / 证书文件的base64字符串
    "Certificate": "",

    // 商户API私钥
    // 当配置了P12格式证书时，已包含私钥，不必再单独配置API私钥。
    // PEM格式证书，需要单独配置。
    "APIPrivateKey": "",

    // RSA公钥
    // 目前仅调用"企业付款到银行卡API [V2]"时使用，执行本示例中的"获取RSA加密公钥API [V2]"即可获取。
    "RsaPublicKey": ""
  }
}
