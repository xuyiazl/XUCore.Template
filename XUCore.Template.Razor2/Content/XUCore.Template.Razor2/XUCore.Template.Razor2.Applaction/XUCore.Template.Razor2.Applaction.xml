<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XUCore.Template.Razor2.Applaction</name>
    </assembly>
    <members>
        <member name="T:XUCore.Template.Razor2.Applaction.ControlAccessStrategy">
            <summary>
            CSHTML控件权限验证
            </summary>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.ResourceAccessStrategy">
            <summary>
            资源权限验证，比如Controller控制器的API方法，或者View
            </summary>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Article.IArticleAppService">
            <summary>
            文章管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.IArticleAppService.CreateAsync(XUCore.Template.Razor2.DbService.Article.ArticleCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建文章
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.IArticleAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Article.ArticleUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新文章信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.IArticleAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新文章指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.IArticleAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.IArticleAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除文章（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.IArticleAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取文章信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.IArticleAppService.GetListAsync(XUCore.Template.Razor2.DbService.Article.ArticleQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取文章列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.IArticleAppService.GetPagedListAsync(XUCore.Template.Razor2.DbService.Article.ArticleQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取文章分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService">
            <summary>
            目录管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.CreateAsync(XUCore.Template.Razor2.DbService.Article.CategoryCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建目录
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Article.CategoryUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新目录信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新目录指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除目录（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取目录信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.GetSelectItemsCheckAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取目录下拉菜单
            </summary>
            <param name="checkeId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.GetSelectItemsCheckArrayAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            获取目录下拉菜单
            </summary>
            <param name="checkedArray"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.GetListAsync(XUCore.Template.Razor2.DbService.Article.CategoryQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取目录列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ICategoryAppService.GetPagedListAsync(XUCore.Template.Razor2.DbService.Article.CategoryQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取目录分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Article.ITagAppService">
            <summary>
            标签管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.CreateAsync(XUCore.Template.Razor2.DbService.Article.TagCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建标签
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Article.TagUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新标签信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新标签指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除标签（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取标签信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.GetSelectItemsCheckAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取目录下拉菜单
            </summary>
            <param name="checkeId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.GetSelectItemsCheckArrayAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            获取目录下拉菜单
            </summary>
            <param name="checkedArray"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.GetListAsync(XUCore.Template.Razor2.DbService.Article.TagQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取标签列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ITagAppService.GetPagedListAsync(XUCore.Template.Razor2.DbService.Article.TagQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取标签分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Article.ArticleAppService">
            <summary>
            文章管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ArticleAppService.CreateAsync(XUCore.Template.Razor2.DbService.Article.ArticleCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建文章
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ArticleAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Article.ArticleUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新文章信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ArticleAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新文章指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ArticleAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ArticleAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除文章（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ArticleAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取文章信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ArticleAppService.GetListAsync(XUCore.Template.Razor2.DbService.Article.ArticleQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取文章列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.ArticleAppService.GetPagedListAsync(XUCore.Template.Razor2.DbService.Article.ArticleQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取文章分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Article.CategoryAppService">
            <summary>
            目录管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.CreateAsync(XUCore.Template.Razor2.DbService.Article.CategoryCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建目录
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Article.CategoryUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新目录信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新目录指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除目录（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取目录信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.GetSelectItemsCheckAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取目录下拉菜单
            </summary>
            <param name="checkeId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.GetSelectItemsCheckArrayAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            获取目录下拉菜单
            </summary>
            <param name="checkedArray"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.GetListAsync(XUCore.Template.Razor2.DbService.Article.CategoryQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取目录列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.CategoryAppService.GetPagedListAsync(XUCore.Template.Razor2.DbService.Article.CategoryQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取目录分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Article.TagAppService">
            <summary>
            标签管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.CreateAsync(XUCore.Template.Razor2.DbService.Article.TagCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建标签
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Article.TagUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新标签信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新标签指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除标签（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取标签信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.GetSelectItemsCheckAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取目录下拉菜单
            </summary>
            <param name="checkeId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.GetSelectItemsCheckArrayAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            获取目录下拉菜单
            </summary>
            <param name="checkedArray"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.GetListAsync(XUCore.Template.Razor2.DbService.Article.TagQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取标签列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Article.TagAppService.GetPagedListAsync(XUCore.Template.Razor2.DbService.Article.TagQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取标签分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Login.ILoginAppService">
            <summary>
            用户登录接口
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.ILoginAppService.LoginAsync(XUCore.Template.Razor2.DbService.User.User.UserLoginCommand,System.Threading.CancellationToken)">
            <summary>
            用户登录
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.ILoginAppService.LoginOutAsync(System.Threading.CancellationToken)">
            <summary>
            退出登录
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.ILoginAppService.GetPermissionExistsAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            查询是否有权限
            </summary>
            <param name="userId"></param>
            <param name="onlyCode"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.ILoginAppService.GetPermissionMenusAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            查询权限导航
            </summary>
            <param name="userId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.ILoginAppService.GetPermissionMenuExpressAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            查询权限导航（快捷导航）
            </summary>
            <param name="userId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Login.LoginAppService">
            <summary>
            用户登录接口
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.LoginAppService.LoginAsync(XUCore.Template.Razor2.DbService.User.User.UserLoginCommand,System.Threading.CancellationToken)">
            <summary>
            用户登录
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.LoginAppService.LoginOutAsync(System.Threading.CancellationToken)">
            <summary>
            退出登录
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.LoginAppService.GetPermissionExistsAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            查询是否有权限
            </summary>
            <param name="userId"></param>
            <param name="onlyCode"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.LoginAppService.GetPermissionMenusAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            查询权限导航
            </summary>
            <param name="userId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Login.LoginAppService.GetPermissionMenuExpressAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            查询权限导航（快捷导航）
            </summary>
            <param name="userId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Upload.ImageInfoDto">
            <summary>
            图片信息
            </summary>
        </member>
        <member name="P:XUCore.Template.Razor2.Applaction.Upload.ImageInfoDto.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:XUCore.Template.Razor2.Applaction.Upload.ImageInfoDto.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:XUCore.Template.Razor2.Applaction.Upload.ImageInfoDto.Root">
            <summary>
            Root
            </summary>
        </member>
        <member name="P:XUCore.Template.Razor2.Applaction.Upload.ImageInfoDto.RootUrl">
            <summary>
            完整Url
            </summary>
        </member>
        <member name="P:XUCore.Template.Razor2.Applaction.Upload.ImageInfoDto.Thumbs">
            <summary>
            缩略图
            </summary>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.Upload.UploadAppService">
            <summary>
            文件上传
            </summary>
        </member>
        <member name="F:XUCore.Template.Razor2.Applaction.Upload.UploadAppService.fileUploadService">
            <summary>
            文件上传服务
            </summary>
        </member>
        <member name="F:XUCore.Template.Razor2.Applaction.Upload.UploadAppService.appSettings">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Upload.UploadAppService.FileAsync(Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            上传文件
            </summary>
            <param name="formFile"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Upload.UploadAppService.ImageAsync(Microsoft.AspNetCore.Http.IFormFile,System.Boolean,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            上传图片
            </summary> 
            <param name="imgFile"></param>
            <param name="cutorgin">是否裁剪原图 {cutorgin=true}</param>
            <param name="autocutsize">自动适配裁剪尺寸最大宽高{800}</param>
            <param name="thumbs">裁剪尺寸{300x300,200x200}</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.Upload.UploadAppService.Base64ImageAsync(XUCore.Template.Razor2.Applaction.Upload.Base64Command,System.Threading.CancellationToken)">
            <summary>
            上传base64图片
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.User.IMenuAppService">
            <summary>
            用户导航管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.CreateAsync(XUCore.Template.Razor2.DbService.Auth.Menu.MenuCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建导航
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Auth.Menu.MenuUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新导航信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新导航指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除导航（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取导航信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.GetTreeAsync(System.Threading.CancellationToken)">
            <summary>
            获取导航树形结构
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.GetListAsync(XUCore.Template.Razor2.DbService.Auth.Menu.MenuQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取导航列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IMenuAppService.GetListAsync(System.Threading.CancellationToken)">
            <summary>
            获取导航列表
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.User.INoticeAppService">
            <summary>
            公告板管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.CreateAsync(XUCore.Template.Razor2.DbService.Notice.NoticeCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建公告板
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Notice.NoticeUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新公告板信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新公告板指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除公告板（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取公告板信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.GetListAsync(XUCore.Template.Razor2.DbService.Notice.NoticeQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取公告板列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.GetPageAsync(XUCore.Template.Razor2.DbService.Notice.NoticeQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取公告板分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.INoticeAppService.GetLevelSelectItemsCheck(System.Int64,System.Threading.CancellationToken)">
            <summary>
            公告等级
            </summary>
            <param name="checkId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.User.IRoleAppService">
            <summary>
            用户角色管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.CreateAsync(XUCore.Template.Razor2.DbService.Auth.Role.RoleCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Auth.Role.RoleUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新角色信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新角色指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除角色（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取角色信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.GetListAsync(XUCore.Template.Razor2.DbService.Auth.Role.RoleQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.GetPageAsync(XUCore.Template.Razor2.DbService.Auth.Role.RoleQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取角色分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IRoleAppService.GetRelevanceMenuAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            获取角色关联的所有导航id集合
            </summary>
            <param name="roleId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.User.IUserAppService">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.CreateAsync(XUCore.Template.Razor2.DbService.User.User.UserCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建用户账号
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.UpdateAsync(XUCore.Template.Razor2.DbService.User.User.UserUpdateInfoCommand,System.Threading.CancellationToken)">
            <summary>
            更新账号信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.UpdatePasswordAsync(XUCore.Template.Razor2.DbService.User.User.UserUpdatePasswordCommand,System.Threading.CancellationToken)">
            <summary>
            更新密码
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除账号（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.GetAccountAsync(XUCore.Template.Razor2.Persistence.Enums.AccountMode,System.String,System.Threading.CancellationToken)">
            <summary>
            获取账号信息（根据账号或手机号码）
            </summary>
            <param name="accountMode"></param>
            <param name="account"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.GetAnyAsync(XUCore.Template.Razor2.Persistence.Enums.AccountMode,System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            检查账号或者手机号是否存在
            </summary>
            <param name="accountMode"></param>
            <param name="account"></param>
            <param name="notId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.GetPageAsync(XUCore.Template.Razor2.DbService.User.User.UserQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取账号分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.CreateRelevanceRoleAsync(XUCore.Template.Razor2.DbService.User.User.UserRelevanceRoleCommand,System.Threading.CancellationToken)">
            <summary>
            账号关联角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.GetRelevanceRoleKeysAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号关联的角色id集合
            </summary>
            <param name="userId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.GetRecordListAsync(XUCore.Template.Razor2.DbService.User.User.UserLoginRecordQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取最近登录记录
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.IUserAppService.GetRecordPageAsync(XUCore.Template.Razor2.DbService.User.User.UserLoginRecordQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有登录记录分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.User.MenuAppService">
            <summary>
            用户导航管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.CreateAsync(XUCore.Template.Razor2.DbService.Auth.Menu.MenuCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建导航
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Auth.Menu.MenuUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新导航信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新导航指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除导航（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取导航信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.GetTreeAsync(System.Threading.CancellationToken)">
            <summary>
            获取导航树形结构
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.GetListAsync(XUCore.Template.Razor2.DbService.Auth.Menu.MenuQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取导航列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.MenuAppService.GetListAsync(System.Threading.CancellationToken)">
            <summary>
            获取导航列表
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.User.NoticeAppService">
            <summary>
            公告板管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.CreateAsync(XUCore.Template.Razor2.DbService.Notice.NoticeCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建公告板
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Notice.NoticeUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新公告板信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新公告板指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除公告板（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取公告板信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.GetListAsync(XUCore.Template.Razor2.DbService.Notice.NoticeQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取公告板列表
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.GetPageAsync(XUCore.Template.Razor2.DbService.Notice.NoticeQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取公告板分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.NoticeAppService.GetLevelSelectItemsCheck(System.Int64,System.Threading.CancellationToken)">
            <summary>
            公告等级
            </summary>
            <param name="checkId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.User.RoleAppService">
            <summary>
            用户角色管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.CreateAsync(XUCore.Template.Razor2.DbService.Auth.Role.RoleCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.UpdateAsync(XUCore.Template.Razor2.DbService.Auth.Role.RoleUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新角色信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新角色指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除角色（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取角色信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.GetListAsync(XUCore.Template.Razor2.DbService.Auth.Role.RoleQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.GetPageAsync(XUCore.Template.Razor2.DbService.Auth.Role.RoleQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取角色分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.RoleAppService.GetRelevanceMenuAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            获取角色关联的所有导航id集合
            </summary>
            <param name="roleId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Template.Razor2.Applaction.User.UserAppService">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.CreateAsync(XUCore.Template.Razor2.DbService.User.User.UserCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建用户账号
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.UpdateAsync(XUCore.Template.Razor2.DbService.User.User.UserUpdateInfoCommand,System.Threading.CancellationToken)">
            <summary>
            更新账号信息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.UpdatePasswordAsync(XUCore.Template.Razor2.DbService.User.User.UserUpdatePasswordCommand,System.Threading.CancellationToken)">
            <summary>
            更新密码
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.UpdateAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新指定字段内容
            </summary>
            <param name="id"></param>
            <param name="field"></param>
            <param name="value"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.UpdateAsync(System.Int64[],XUCore.Template.Razor2.Persistence.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids"></param>
            <param name="status"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.DeleteAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除账号（物理删除）
            </summary>
            <param name="ids"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号信息
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.GetAccountAsync(XUCore.Template.Razor2.Persistence.Enums.AccountMode,System.String,System.Threading.CancellationToken)">
            <summary>
            获取账号信息（根据账号或手机号码）
            </summary>
            <param name="accountMode"></param>
            <param name="account"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.GetAnyAsync(XUCore.Template.Razor2.Persistence.Enums.AccountMode,System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            检查账号或者手机号是否存在
            </summary>
            <param name="accountMode"></param>
            <param name="account"></param>
            <param name="notId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.GetPageAsync(XUCore.Template.Razor2.DbService.User.User.UserQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取账号分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.CreateRelevanceRoleAsync(XUCore.Template.Razor2.DbService.User.User.UserRelevanceRoleCommand,System.Threading.CancellationToken)">
            <summary>
            账号关联角色
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.GetRelevanceRoleKeysAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号关联的角色id集合
            </summary>
            <param name="userId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.GetRecordListAsync(XUCore.Template.Razor2.DbService.User.User.UserLoginRecordQueryCommand,System.Threading.CancellationToken)">
            <summary>
            获取最近登录记录
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Template.Razor2.Applaction.User.UserAppService.GetRecordPageAsync(XUCore.Template.Razor2.DbService.User.User.UserLoginRecordQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有登录记录分页
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
    </members>
</doc>
